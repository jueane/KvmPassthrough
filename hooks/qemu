#!/bin/bash

guest_name="$1"
libvirt_task="$2"

gui_process_name="xinit"

passthrough_vm_names=("win11" "win10" "ubuntu" "vArch")
snapshot_vm_names=("win11" "win10" "ubuntu" "vArch" "android" "docker_arch")

function containsElement() {
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
    return 0
}

need_passthrough=false
containsElement $guest_name ${passthrough_vm_names[@]}
[ $? = 1 ] && need_passthrough=true

need_snapshot=false
containsElement $guest_name ${snapshot_vm_names[@]}
[ $? = 1 ] && need_snapshot=true

function CloseGUI() {
    if pgrep -x $gui_process_name >/dev/null; then
        echo "$gui_process_name exist, killing it"
        pkill -15 ${gui_process_name} #2>&1 | tee -a /var/log/libvirt/custom_hooks.log
        # pkill -15 ${gui_process_name}
    fi
    flag=0
    while [ $flag -eq 0 ]; do
        sleep 1
        if pgrep -x $gui_process_name >/dev/null; then
            echo "waiting ${gui_process_name} terminate"
        else
            flag=1
        fi
    done
    sleep 2
    echo "${gui_process_name} terminated"
}

function OnPrepare() {
    /jdata/develop/AutoSnapshot/data_snap.sh jdata/vdisk/ $guest_name #2>&1 | tee -a /var/log/libvirt/custom_hooks.log

    if $need_passthrough; then
        CloseGUI

        # /jdata/develop/repos/KvmPassthrough/hooks/vfio-startup.sh 2>&1 | tee -a /var/log/libvirt/custom_hooks.log
    fi
}

function OnRelease() {
    if $need_passthrough; then
        /jdata/develop/repos/KvmPassthrough/hooks/vfio-teardown.sh #2>&1 | tee -a /var/log/libvirt/custom_hooks.log
    fi
}

case "$libvirt_task" in
"prepare")
    if $need_snapshot; then
        OnPrepare 2>&1 | tee -a /var/log/libvirt/custom_hooks.log
        # OnPrepare
    fi
    ;;
"release")
    # OnRelease
    ;;
esac
