#!/bin/bash

guest_name="$1"
libvirt_task="$2"

enabled_video_processor=false

gui_process_name="xinit"

passthrough_vm_names=("win11" "win10" "ubuntu" "vArch")

function containsElement() {
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
    return 0
}

need_passthrough=false
containsElement $guest_name ${passthrough_vm_names[@]}
[ $? = 1 ] && need_passthrough=true

function OpenGUI() {
    # startx
}

function CloseGUI() {
    exist=false

    if pgrep -x $gui_process_name >/dev/null; then
        exist=true
        echo "$gui_process_name exist, killing it"
        pkill -15 ${gui_process_name}
        # pkill -15 ${gui_process_name}
    fi

    if $exist; then
        flag=0
        while [ $flag -eq 0 ]; do
            sleep 0.5
            if pgrep -x $gui_process_name >/dev/null; then
                echo "waiting ${gui_process_name} terminate"
            else
                flag=1
            fi
        done
        sleep 5
        echo "${gui_process_name} terminated"
    else
        sleep 0.5
    fi
}

function OnPrepare() {
    /jdata/develop/AutoSnapshot/zfs/data_snap.sh $guest_name

    if $need_passthrough; then
        CloseGUI
        # /jdata/develop/repos/KvmPassthrough/hooks/vfio-startup.sh
    fi
}

function OnRelease() {
    if $need_passthrough; then
        # /jdata/develop/repos/KvmPassthrough/hooks/vfio-teardown.sh
        OpenGUI
    fi
}

function qemu_process() {
    case "$libvirt_task" in
    "prepare")
        OnPrepare
        ;;
    "release")
        OnRelease
        ;;
    esac
}

qemu_process 2>&1 | tee -a /var/log/libvirt/custom_hooks.log
